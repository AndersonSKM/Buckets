version: '3.3'

services:
  nginx:
    image: buckets/nginx:latest
    container_name: nginx
    restart: always
    depends_on:
      - "auth"
    volumes:
      - static-data:/static
      - media-data:/media
    ports:
      - "80:80"
    expose:
      - "80"

  postgres:
    image: postgres:10-alpine
    container_name: postgres
    restart: always
    env_file: ./env
    volumes:
      - database:/var/lib/postgresql
    ports:
      - "5435:5432"
    expose:
      - "5432"

  rabbitmq:
    image: rabbitmq:3.7-management-alpine
    container_name: rabbitmq
    restart: always
    env_file: ./env
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    ports:
      - "15673:15672"
      - "5673:5672"

  redis:
    image: redis:3.2-alpine
    container_name: redis
    restart: always
    env_file: ./env
    ports:
      - "6380:6379"

  service-core:
    image: buckets/service-core:latest
    container_name: service-core
    env_file: ./env
    depends_on:
      - "rabbitmq"
    volumes:
      - ./service-core/:/app/

  api-core:
    image: buckets/api-core:latest
    container_name: api-core
    env_file: ./env
    depends_on:
      - "rabbitmq"
      - "postgres"
      - "redis"
    volumes:
      - ./api-core/:/app/

  auth:
    image: buckets/auth:latest
    container_name: auth
    restart: always
    env_file: ./env
    environment:
      - POSTGRES_DB=auth
    depends_on:
      - "postgres"
      - "rabbitmq"
      - "redis"
    volumes:
      - static-data:/static
      - media-data:/media
      - ./auth/:/app/
    expose:
      - "8000"

volumes:
  database:
    driver: local
  rabbitmq-data:
    driver: local
  static-data:
    driver: local
  media-data:
    driver: local