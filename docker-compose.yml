version: '3.3'

services:
  nginx:
    image: buckets/nginx:dev
    container_name: nginx
    restart: always
    volumes:
      - static-data:/static
      - media-data:/media
    ports:
      - "80:80"
    expose:
      - "80"
    healthcheck:
      test: ["CMD", "nc", "-z", "nginx", "80"]

  postgres:
    image: postgres:10-alpine
    container_name: postgres
    restart: always
    env_file: ./env
    volumes:
      - database:/var/lib/postgresql
    ports:
      - "5435:5432"
    expose:
      - "5432"
    healthcheck:
      test: ["CMD", "pg_isready"]

  rabbitmq:
    image: rabbitmq:3.7-management-alpine
    container_name: rabbitmq
    restart: always
    env_file: ./env
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    ports:
      - "15673:15672"
      - "5673:5672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]

  redis:
    image: redis:3.2-alpine
    container_name: redis
    restart: always
    env_file: ./env
    ports:
      - "6380:6379"

  service-core:
    image: buckets/service-core:dev
    container_name: service-core
    env_file: ./env
    depends_on:
      - "redis"
      - "rabbitmq"
    volumes:
      - ./service-core/:/app/

  api:
    image: buckets/api:dev
    container_name: api
    restart: always
    env_file: ./env
    depends_on:
      - "postgres"
      - "rabbitmq"
      - "redis"
    volumes:
      - static-data:/static
      - media-data:/media
      - ./api/:/app/
    expose:
      - "8000"
    healthcheck:
      test: ["CMD", "nc", "-z", "api", "8000"]

volumes:
  database:
    driver: local
  rabbitmq-data:
    driver: local
  static-data:
    driver: local
  media-data:
    driver: local