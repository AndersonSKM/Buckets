version: 2
jobs:
  test:
    working_directory: ~/Cash-Miner
    docker:
      - image: circleci/python:3.6.6-node-browsers
        environment:
          PIPENV_VENV_IN_PROJECT: true
          DEBUG: true
          DATABASE_URL: postgresql://root@localhost:5432/circleci?sslmode=disable
          REDIS_URL: redis://localhost:6379/1
      - image: circleci/postgres:11.1-alpine-ram
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circleci
      - image: redis
    steps:
      - checkout
      - restore_cache:
          keys:
            v1-pip-deps-{{ checksum "api/Pipfile.lock" }}
            v1-pip-deps-
            v1-npm-deps-{{ checksum "client/yarn.lock" }}
            v1-npm-deps-
      - run:
          name: Install Django Dependencies
          command: |
            sudo pip install pipenv
            cd api/
            pipenv install --dev
      - run:
          name: Install Vue Dependencies
          command: |
            cd client/
            yarn global add @vue/cli@3.0.3
            yarn install
      - save_cache:
          key: v1-pip-deps-{{ checksum "api/Pipfile.lock" }}
          paths:
            - "api/.venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"
          key: v1-npm-deps-{{ checksum "client/yarn.lock" }}
          paths:
            - "~/.cache/yarn"
            - "client/node_modules"
      - run:
          name: Up Django Server
          command: |
            cd api/
            pipenv run server
          background: true
      - run:
          name: Wait Django Server To Be Ready
          command: |
            cd api/
            curl -H "Accept: application/json" \
              -sS --retry 10 --retry-max-time 30 \
              --retry-connrefused http://0.0.0.0:8000/api/health-check/
            pipenv run migrate
      - run:
          name: Test Backend
          command: |
            cd api/
            pipenv run lint
            pipenv run check-imports
            pipenv run test
      - run:
          name: Test Frontend
          command: |
            cd client/
            yarn run lint
            yarn run test:unit
            yarn run test:e2e --record
      - run:
          name: Upload Tests Results
          command: |
            curl -s https://codecov.io/bash > .codecov
            chmod +x .codecov
            ./.codecov -Z api/
            ./.codecov -Z client/

  deploy:
    machine: true
    working_directory: ~/Cash-Miner
    steps:
      - checkout
      - run:
          name: Deploy Master to Heroku
          command: git push heroku master

workflows:
  version: 2
  test-deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master
